<Window x:Class="Lab2Var2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:chart="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:local="clr-namespace:Lab2Var2"
        mc:Ignorable="d"
        Title="Лабораторная работа 2. Вариант 2" Height="550" Width="900" MinWidth="900" MinHeight="550">
    <Window.Resources>
        <local:IntToString x:Key="IntToString"/>
        <local:DoubleToString x:Key="DoubleToString"/>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="local:CustomCommands.MeasuredData" CanExecute="MeasuredData_CanExecute" Executed="MeasuredData_Executed" />
        <CommandBinding Command="local:CustomCommands.Splines" CanExecute="Splines_CanExecute" Executed="Splines_Executed" />
    </Window.CommandBindings>
    <Grid Background="#dbdbdb">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="1.5*"/>
            <RowDefinition Height="3*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Menu x:Name="menu" Grid.ColumnSpan="3">
            <MenuItem Header="Menu">
                <MenuItem Header="MeasuredData" Command="local:CustomCommands.MeasuredData"/>
                <MenuItem Header="Splines" Command="local:CustomCommands.Splines"/>
            </MenuItem>
            <ToolBar Height="30" VerticalAlignment="Top">
                <Button Command="local:CustomCommands.MeasuredData">MeasuredData</Button>
                <Separator />
                <Button Command="local:CustomCommands.Splines">Splines</Button>
            </ToolBar>
        </Menu>

        <StackPanel Grid.Row="1" Grid.RowSpan="2" Margin="0,10,0,2">
            <TextBlock HorizontalAlignment="Stretch"  Margin="5,5,5,0"  TextWrapping="Wrap" VerticalAlignment="Top" Text="Выбор функции"/>
            <ComboBox x:Name="FunctionType" HorizontalAlignment="Stretch" Margin="5,5,5,0"  VerticalAlignment="Top"  IsSynchronizedWithCurrentItem="True" SelectedItem="{Binding Data.InputChecker.Function, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
            <TextBlock HorizontalAlignment="Stretch"  Margin="5,5,5,0"  TextWrapping="Wrap" VerticalAlignment="Top" Text="Длина неравномерной сетки"/>
            <TextBox x:Name="LengthTextBox" HorizontalAlignment="Stretch" Margin="5,5,5,0"  TextWrapping="Wrap" VerticalAlignment="Top">
                <TextBox.Text>
                    <Binding Path="Data.InputChecker.Length" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}" Converter="{StaticResource IntToString}" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <DataErrorValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock HorizontalAlignment="Stretch" Margin="5,5,5,0"  TextWrapping="Wrap" VerticalAlignment="Top" Text="Начало отрезка"/>
            <TextBox x:Name="LeftTextBox" HorizontalAlignment="Stretch" Margin="5,5,5,0"  TextWrapping="Wrap" VerticalAlignment="Top">
                <TextBox.Text>
                    <Binding Path="Data.InputChecker.Left" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}" Converter="{StaticResource DoubleToString}" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <DataErrorValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock HorizontalAlignment="Stretch" Margin="5,5,5,0"  TextWrapping="Wrap" VerticalAlignment="Top" Text="Конец отрезка"/>
            <TextBox x:Name="RightTextBox" HorizontalAlignment="Stretch" Margin="5,5,5,0"  TextWrapping="Wrap" VerticalAlignment="Top">
                <TextBox.Text>
                    <Binding Path="Data.InputChecker.Right" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}" Converter="{StaticResource DoubleToString}" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <DataErrorValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock HorizontalAlignment="Stretch" TextWrapping="Wrap" VerticalAlignment="Top" Height="16"  Margin="5,5,5,0" Text="Предел интегрирования 1"/>
            <TextBox x:Name="X1TextBox" HorizontalAlignment="Stretch" Margin="5,5,5,0"  TextWrapping="Wrap" VerticalAlignment="Top" Height="18">
                <TextBox.Text>
                    <Binding Path="Data.InputChecker.X1" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}" Converter="{StaticResource DoubleToString}" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <DataErrorValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock HorizontalAlignment="Stretch" Margin="5,5,5,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="16" Text="Предел интегрирования 2"/>
            <TextBox x:Name="X2TextBox" HorizontalAlignment="Stretch" Margin="5,5,5,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="18">
                <TextBox.Text>
                    <Binding Path="Data.InputChecker.X2" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}" Converter="{StaticResource DoubleToString}" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <DataErrorValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock HorizontalAlignment="Stretch" Margin="5,5,5,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="16" Text="Предел интегрирования 3"/>
            <TextBox x:Name="X3TextBox" HorizontalAlignment="Stretch" Margin="5,5,5,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="18">
                <TextBox.Text>
                    <Binding Path="Data.InputChecker.X3" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}" Converter="{StaticResource DoubleToString}" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <DataErrorValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock HorizontalAlignment="Stretch" Margin="5,5,5,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="16" Text="Длина равномерной сетки"/>
            <TextBox x:Name="UniformLengthTextBox" HorizontalAlignment="Stretch" TextWrapping="Wrap" VerticalAlignment="Top" Height="18" Margin="5,5,5,0">
                <Binding Path="Data.InputChecker.UniformLength" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}" Converter="{StaticResource IntToString}" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <DataErrorValidationRule/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <TextBlock HorizontalAlignment="Stretch" Text="{Binding Data.InputChecker.Error}" TextWrapping="Wrap" Height="40" Margin="10" Foreground="Red"/>
        </StackPanel> 

        <ListBox x:Name="listBox"
                 Grid.Row="1" 
                 Grid.Column="1"
                 Margin="0,10,0,2"
                 Background="#dbdbdb"
                 ItemsSource="{Binding Data.SplinesData.Measured.Info, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>

        <StackPanel Grid.Row="1" Grid.Column="2" Margin="5,5,0,0">
            <TextBlock HorizontalAlignment="Stretch" Text="{Binding Data.FirstIntegral}" TextWrapping="Wrap" Height="24"/>
            <TextBlock HorizontalAlignment="Stretch" Text="{Binding Data.SecondIntegral}" TextWrapping="Wrap" Height="24"/>
            <TextBlock HorizontalAlignment="Stretch" Text="{Binding Data.FirstDerivatieve}" TextWrapping="Wrap" Height="24"/>
            <TextBlock HorizontalAlignment="Stretch" Text="{Binding Data.SecondDerivatieve}" TextWrapping="Wrap" Height="24"/>
            <TextBlock HorizontalAlignment="Stretch" Text="{Binding Data.SplineLeft}" TextWrapping="Wrap" Height="24"/>
            <TextBlock HorizontalAlignment="Stretch" Text="{Binding Data.SplineRight}" TextWrapping="Wrap" Height="24"/>
           
        </StackPanel>

        <chart:CartesianChart Series="{Binding Data.Chart.Series}" LegendLocation="Bottom"   Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="5" >
            <chart:CartesianChart.AxisY>
                <chart:Axis Title="Value" LabelFormatter="{Binding Data.Chart.Formatter}"/>
            </chart:CartesianChart.AxisY>
            <chart:CartesianChart.AxisX>
                <chart:Axis Title="Point" LabelFormatter="{Binding Data.Chart.Formatter}"/>
            </chart:CartesianChart.AxisX>
        </chart:CartesianChart>
    </Grid>
</Window>
